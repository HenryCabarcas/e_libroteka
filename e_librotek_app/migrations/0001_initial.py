# Generated by Django 3.2.7 on 2021-10-11 01:29

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('ISBN', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True, verbose_name='ISBN')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('volume', models.CharField(default='1', max_length=50, verbose_name='volume')),
                ('gender', models.CharField(max_length=40, null=True, verbose_name='gender')),
                ('editorial', models.CharField(max_length=80, null=True, verbose_name='editorial')),
                ('formato', models.CharField(default='pdf', max_length=20, null=True, verbose_name='formato')),
                ('resume', models.TextField(null=True, verbose_name='resume')),
                ('url', models.CharField(max_length=512, null=True, verbose_name='url')),
                ('creationDate', models.DateTimeField(default=datetime.datetime(2021, 10, 10, 20, 29, 27, 925023))),
                ('modificationDate', models.DateTimeField(default=datetime.datetime(2021, 10, 10, 20, 29, 27, 925023))),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(default=3, verbose_name='score')),
                ('comment', models.CharField(max_length=500, verbose_name='comment')),
                ('creationDate', models.DateTimeField(default=datetime.datetime(2021, 10, 10, 20, 29, 27, 926060))),
                ('modificationDate', models.DateTimeField(default=datetime.datetime(2021, 10, 10, 20, 29, 27, 926060))),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book', to='e_librotek_app.book')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('name', models.CharField(default='User', max_length=20, verbose_name='name')),
                ('lastname', models.CharField(default='User', max_length=25, verbose_name='lastname')),
                ('password', models.CharField(max_length=256, verbose_name='password')),
                ('signUp', models.DateField(default=datetime.date(2021, 10, 11), verbose_name='signUp')),
                ('lastLogin', models.DateTimeField(default=datetime.datetime(2021, 10, 10, 20, 29, 27, 928054), verbose_name='lastLogin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
